name: should-i-skate-today CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

#set environment variables 
env:
  HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
  HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
  HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
  APP_NAME: ${{ 'should-i-skate-today' }}

jobs:
  build:
    
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build -c Release --no-restore

      - name: Test
        run: dotnet test -c Release --no-build --verbosity normal --filter "Category!=LongRunning" 
  deploy:
    name: Deploy to Heroku
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build, Push and Deploy to Heroku # set whatever name you want to this step
        id: heroku
        uses: jctaveras/heroku-deploy@v1.0.0 # use the latest version of the action
        with:
          email: ${{ secrets.HEROKU_EMAIL }} # your heroku email
          api_key: ${{ secrets.HEROKU_API_KEY }} # your heroku api key
          app_name: ${{ secrets.HEROKU_APP_NAME }} # you aplication name
          dockerfile_path: 'shouldISkateToday/Dockerfile' # set the path to the folder where the Dockerfile is located
          process_type: 'web' # Specify the process type you want to build and release